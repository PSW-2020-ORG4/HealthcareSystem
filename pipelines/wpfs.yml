trigger:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  paths: "**/HealthcareSystemFrontends/**/*"
  solution: 'HealthcareSystemFrontends/HealthcareSystemFrontends.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  sonarProjectKey: 'psw-2020-org4_WPFs'
  sonarProjectName: 'WPFs'
  sonarOrganization: 'psw-2020-org4'

jobs:
- job: Check
  steps:
  - task: PowerShell@2
    displayName: 'Check if build is needed'
    name: CheckChangedFiles
    inputs:
      targetType: 'inline'
      script: |
        $reason = "$(Build.Reason)"
        if($reason -eq "PullRequest")
        {
            echo "Pipeline triggered by PR: checking which files were changed."

            $files=$(git diff HEAD HEAD~ --name-only)
            $paths = $env:PATHS -split ' '
            
            $shouldBuild = $false
            foreach ($path in $paths) 
            { 
                if($files -like $path) 
                {
                    $shouldBuild = $true
                    break
                } 
            }
            if ($shouldBuild)
            {
                echo "Watched files were changed."
                echo "Build will execute."
                Write-Host "##vso[task.setvariable variable=shouldBuild;isOutput=true]Yes"
            }
            else
            {
                echo "Watched files were not changed."
                echo "Build will not execute."
                Write-Host "##vso[task.setvariable variable=shouldBuild;isOutput=true]No"
            }
        }
        else
        {
            echo "Pipeline not triggered by PR."
            echo "Build will execute."
            Write-Host "##vso[task.setvariable variable=shouldBuild;isOutput=true]Yes"
        }
      pwsh: true

- job: Build
  dependsOn: Check
  condition: eq(dependencies.Check.outputs['CheckChangedFiles.shouldBuild'], 'Yes')
  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    displayName: 'NuGet package restore'
    inputs:
      restoreSolution: '$(solution)'
      
  - task: SonarCloudPrepare@1
    displayName: 'Prepare SonarCloud analysis'
    inputs:
      SonarCloud: 'SonarCloud'
      organization: '$(sonarOrganization)'
      scannerMode: 'MSBuild'
      projectKey: '$(sonarProjectKey)'
      projectName: '$(sonarProjectName)'

  - task: VSBuild@1
    displayName: 'Build WPFs'
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      
  - task: SonarCloudAnalyze@1
    displayName: 'SonarCloud analysis'
    
  - task: SonarCloudPublish@1
    displayName: 'Publish SonarCloud results'
    inputs:
      pollingTimeoutSec: '300'

