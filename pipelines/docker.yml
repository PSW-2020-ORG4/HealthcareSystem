trigger:
- develop

variables:
  dockerRegistry: 'pufkedockerhub'

pool:
  vmImage: 'ubuntu-18.04'

jobs:
- job: PatientWebApp
  variables:
    project: 'HealthcareSystem/PatientWebApp/PatientWebApp.csproj'
    configuration: 'Release'
    dockerfile: 'HealthcareSystem/PatientWebApp/Dockerfile'
    dockerRepository: 'pufke/patientwebapp'
    dir: 'pwaPublish'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
    - task: Bash@3
      displayName: 'Prepare context for Docker'
      inputs:
        targetType: 'inline'
        script: |
          docker --version
          dotnet publish $(project) -c $(configuration) -o $(dir)
          cp $(dockerfile) $(dir)/Dockerfile  

    - task: Docker@2
      displayName: 'Build and push Docker image'
      inputs:
        containerRegistry: '$(dockerRegistry)'
        repository: '$(dockerRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(dir)/Dockerfile'
        buildContext: '$(dir)'
        tags: |
          $(Build.BuildId)
          latest

- job: GraphicalEditorServer
  variables:
    project: 'HealthcareSystem/GraphicalEditorServer/GraphicalEditorServer.csproj'
    configuration: 'Release'
    dockerfile: 'HealthcareSystem/GraphicalEditorServer/Dockerfile'
    dockerRepository: 'pufke/graphicaleditor'
    dir: 'esPublish'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
    - task: Bash@3
      displayName: 'Prepare context for Docker'
      inputs:
        targetType: 'inline'
        script: |
          docker --version
          dotnet publish $(project) -c $(configuration) -o $(dir)
          cp $(dockerfile) $(dir)/Dockerfile  

    - task: Docker@2
      displayName: 'Build and push Docker image'
      inputs:
        containerRegistry: '$(dockerRegistry)'
        repository: '$(dockerRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(dir)/Dockerfile'
        buildContext: '$(dir)'
        tags: |
          $(Build.BuildId)
          latest

- job: IntegrationAdapters
  variables:
    project: 'HealthcareSystem/IntegrationAdapters/IntegrationAdapters.csproj'
    configuration: 'Release'
    dockerfile: 'HealthcareSystem/IntegrationAdapters/Dockerfile'
    dockerRepository: 'pufke/integrationadapters'
    dir: 'iaPublish'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
    - task: Bash@3
      displayName: 'Prepare context for Docker'
      inputs:
        targetType: 'inline'
        script: |
          docker --version
          dotnet publish $(project) -c $(configuration) -o $(dir)
          cp $(dockerfile) $(dir)/Dockerfile  

    - task: Docker@2
      displayName: 'Build and push Docker image'
      inputs:
        containerRegistry: '$(dockerRegistry)'
        repository: '$(dockerRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(dir)/Dockerfile'
        buildContext: '$(dir)'
        tags: |
          $(Build.BuildId)
          latest

