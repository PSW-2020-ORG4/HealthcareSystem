version: "3.8"
services: 
  database:
    restart: always
    networks:
      - demo  
    volumes:
      - sql-scripts:/docker-entrypoint-initdb.d/

  patientwebapp:
    build:
      context: HealthcareSystem\
      dockerfile: Dockerfile.patient-webapp
    ports:
    - "8181:80"
    depends_on:
      - database
    restart: on-failure
    networks:
      - demo
    volumes:
      - sql-scripts:/app/sql

  intergrationadapters:
    build:
      context: HealthcareSystem\
      dockerfile: Dockerfile.integration-adapters
    ports:
    - "8282:80"
    environment:
      RABBITMQ_HOST: "rabbitmq"
      RABBITMQ_USER: "org4"
      RABBITMQ_PASSWORD: "org4"
      RABBITMQ_RETRY: 20
      RABBITMQ_RETRY_WAIT: 30000
    depends_on:      
      - database
      - rabbitmq
    restart: on-failure
    networks:
      - demo

  editorserver:
    build:
      context: HealthcareSystem\
      dockerfile: Dockerfile.graphical-editorserver
    ports:
    - "5001:80"
    depends_on:
      - database
    restart: on-failure
    networks:
      - demo

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: "org4"
      RABBITMQ_DEFAULT_PASS: "org4"
    networks:
      - demo

volumes:
  sql-scripts:
  data:

networks:
  demo:
    name: demo
    driver: bridge