version: "3.8"
services: 
  database:
    restart: always
    networks:
      - demo  

  patientwebapp:
    build:
      context: ../../HealthcareSystem/PatientWebApp
      dockerfile: Dockerfile.local
    ports:
    - "8585:80"
    environment:
      PATIENT_SERVICE_URL: "http://patientservice"
      FEEDBACK_SURVEY_SERVICE_URL: "http://feedbacksurveyservice"
      USER_SERVICE_URL: "http://userservice"
      NOTIFICATION_SERVICE_URL: "http://notificationservice"
      SCHEDULE_SERVICE_URL: "http://scheduleservice"
    depends_on:
      - userservice
      - patientservice
      - notificationservice
      - feedbacksurveyservice
      - scheduleservice
    restart: on-failure
    networks:
      - demo

  userservice:
    build:
      context: ../../HealthcareSystem/UserService
      dockerfile: Dockerfile.local
    depends_on:
      - database
    restart: on-failure
    networks:
      - demo

  scheduleservice:
    build:
      context: ../../HealthcareSystem/ScheduleService
      dockerfile: Dockerfile.local
    depends_on:
      - database
    restart: on-failure
    networks:
      - demo

  patientservice:
    build:
      context: ../../HealthcareSystem/PatientService
      dockerfile: Dockerfile.local
    depends_on:
      - database
    restart: on-failure
    networks:
      - demo

  feedbacksurveyservice:
    build:
      context: ../../HealthcareSystem/FeedbackAndSurveyService
      dockerfile: Dockerfile.local
    depends_on:
      - database
    restart: on-failure
    networks:
      - demo

  notificationservice:
    build:
      context: ../../HealthcareSystem/NotificationService
      dockerfile: Dockerfile.local
    restart: on-failure
    networks:
      - demo

networks:
  demo:
    name: demo
    driver: bridge