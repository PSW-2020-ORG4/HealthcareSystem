trigger:
- develop

pool:
  vmImage: 'ubuntu-18.04'

variables:
  paths: "**/IntegrationAdapters/* **/IntegrationAdaptersTests/* **/Backend/* "
  project: '**/IntegrationAdapters.csproj'
  configuration: 'Release'
  sonarProjectKey: 'milana-todorovic_Adapters'
  sonarProjectName: 'milana-todorovic_Adapters'
  sonarOrganization: 'milana-todorovic'

jobs:
- job: Check
  steps:
  - task: PowerShell@2
    displayName: 'Check if build is needed'
    name: CheckChangedFiles
    inputs:
      targetType: 'inline'
      script: |
        $reason = "$(Build.Reason)"
        if($(Build.Reason) -eq "PullRequest")
        if($reason -eq "PullRequest")
        {
            $files=$(git diff HEAD HEAD~ --name-only)
            $paths = $env:PATHS -split ' '
            
            $shouldBuild = $false
            foreach ($path in $paths) 
            { 
                if( $files -like $path) 
                {
                    $shouldBuild = $true
                    break
                } 
            }
            if ($shouldBuild)
            {
                echo "Build will execute"
                Write-Host "##vso[task.setvariable variable=shouldBuild;isOutput=true]Yes"
            }
            else
            {
                echo "Build will not execute"
                Write-Host "##vso[task.setvariable variable=shouldBuild;isOutput=true]No"
            }
        }
        else
        {
            echo "Build will execute"
            Write-Host "##vso[task.setvariable variable=shouldBuild;isOutput=true]Yes"
        }
      pwsh: true

- job: Build
  dependsOn: Check
  condition: eq(dependencies.Check.outputs['CheckChangedFiles.shouldBuild'], 'Yes')
  steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '3.1.x'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '$(project)'
        feedsToUse: 'select'
    - task: SonarCloudPrepare@1
      displayName: 'Prepare SonarCloud analysis'
      inputs:
        SonarCloud: 'SonarCloud'
        organization: '$(sonarOrganization)'
        scannerMode: 'MSBuild'
        projectKey: '$(sonarProjectKey)'
        projectName: '$(sonarProjectName)'    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '$(project)'
        arguments: '-c $(configuration)'
    - task: SonarCloudAnalyze@1
      displayName: 'SonarCloud analysis'
    - task: SonarCloudPublish@1
      displayName: 'Publish SonarCloud results'
      inputs:
        pollingTimeoutSec: '300'
